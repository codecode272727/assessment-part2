apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment-1
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: example
  template:
    metadata:
      labels:
        app: example
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - example
            topologyKey: kubernetes.io/hostname
      containers:
      - name: busybox
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh", "-c", "while true; do sleep 3600; done"]
        env:
        - name: USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: USER
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: PASSWORD
        resources:
          requests:
            memory: "64Mi"  
            cpu: "50m"       
          limits:
            memory: "128Mi"  
            cpu: "100m"  
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: efs-storage
          mountPath: /mnt/data
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Values.configmap.name }}
      - name: efs-storage
        persistentVolumeClaim:
          claimName: efs-pvc
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: example

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-deployment-2
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: example-2
  template:
    metadata:
      labels:
        app: example-2
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - example-2
            topologyKey: kubernetes.io/hostname
      containers:
      - name: busybox
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh", "-c", "while true; do sleep 3600; done"]
        resources:
          requests:
            memory: "64Mi"  
            cpu: "50m"       
          limits:
            memory: "128Mi"  
            cpu: "100m"  
        volumeMounts:
        - name: efs-storage
          mountPath: /mnt/data
      volumes:
      - name: efs-storage
        persistentVolumeClaim:
          claimName: efs-pvc
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: example-2

